# This is a basic workflow to help you get started with Actions
name: Docker build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Cancel old builds on PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: packer

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build base image
        run: |
          cd images/linux
          chmod +x create-base-image.sh
          ./create-base-image.sh

      # Runs a single command using the runners shell
      - name: Packer build Docker image & upload
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_BUILDKIT: 1
        run: |
          cd images/linux
          export COMMIT_SHA="$(git rev-parse --short HEAD)"
          
          echo ${DOCKER_PASSWORD} | docker login ghcr.io --username USERNAME --password-stdin 

          docker buildx build \
            --tag ghcr.io/a1ebd7cc0eb3/runner-images:latest \
            --tag ghcr.io/a1ebd7cc0eb3/runner-images:ubuntu22 \
            --tag ghcr.io/a1ebd7cc0eb3/runner-images:22.04 \
            --tag ghcr.io/a1ebd7cc0eb3/runner-images:${COMMIT_SHA} \
          .

          docker push ghcr.io/a1ebd7cc0eb3/runner-images:latest
          docker push ghcr.io/a1ebd7cc0eb3/runner-images:ubuntu22
          docker push ghcr.io/a1ebd7cc0eb3/runner-images:22.04
          docker push ghcr.io/a1ebd7cc0eb3/runner-images:${COMMIT_SHA}

          # packer init  ubuntu2204-docker.pkr.hcl
          # packer build \
          #   -var "registry_details={ login=\"true\", login_username=\"USERNAME\", login_server = \"ghcr.io\", login_password=\"${DOCKER_PASSWORD}\" }" \
          #   -var "commit_sha=${COMMIT_SHA}" \
          #   ubuntu2204-docker.pkr.hcl

  scan-base:
    runs-on: packer
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Snyk scan base image
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo ${DOCKER_PASSWORD} | docker login ghcr.io --username USERNAME --password-stdin
          docker scan --login --token ${SNYK_TOKEN}
          # Scan exit code is 1 if finds results, force to be zero
          docker scan \
            --accept-license \
            --json \
            --group-issues \
            --severity=high \
            runner-base:22.04 \
            | tee base-scan.json \
            || true
          # Would like to output serif


  scan:
    runs-on: packer
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Snyk scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo ${DOCKER_PASSWORD} | docker login ghcr.io --username USERNAME --password-stdin
          docker scan --login --token ${SNYK_TOKEN}
          # Scan exit code is 1 if finds results, force to be zero
          docker scan \
            --accept-license \
            --json \
            --group-issues \
            --severity=high \
            --exclude-base \
            --file images/linux/Dockerfile \
            ghcr.io/a1ebd7cc0eb3/runner-images:latest \
            | tee runner-scan.json \
            || true
          # docker scan --accept-license --json --group-issues --severity=high --exclude-base --file images/linux/Dockerfile ghcr.io/a1ebd7cc0eb3/runner-images:latest || true
          # Would like to output serif

